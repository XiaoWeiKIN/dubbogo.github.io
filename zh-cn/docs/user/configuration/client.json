{
  "filename": "client.md",
  "__html": "<h1>client</h1>\n<h2>第一步：编写消费端的服务</h2>\n<ol>\n<li>\n<p>编写需要被编码的结构体，由于使用 <code>Hessian2</code> 作为编码协议，<code>User</code> 需要实现 <code>JavaClassName</code> 方法，它的返回值在dubbo中对应User类的类名。</p>\n<pre><code class=\"language-go\"><span class=\"hljs-keyword\">type</span> User <span class=\"hljs-keyword\">struct</span> {\n\tId   <span class=\"hljs-keyword\">string</span>\n\tName <span class=\"hljs-keyword\">string</span>\n\tAge  <span class=\"hljs-keyword\">int32</span>\n\tTime time.Time\n}\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">func</span> <span class=\"hljs-params\">(u User)</span> <span class=\"hljs-title\">JavaClassName</span><span class=\"hljs-params\">()</span> <span class=\"hljs-title\">string</span></span> {\n\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">\"org.apache.dubbo.User\"</span>\n}\n</code></pre>\n</li>\n<li>\n<p>与服务端不同的是，提供服务的方法作为结构体的参数，不需要编写具体业务逻辑。另外，<code>Provider</code> 不对应dubbo中的实现，而是对应一个接口。</p>\n<pre><code class=\"language-go\"><span class=\"hljs-keyword\">type</span> UserProvider <span class=\"hljs-keyword\">struct</span> {\n\tGetUser <span class=\"hljs-function\"><span class=\"hljs-keyword\">func</span><span class=\"hljs-params\">(ctx context.Context, req []<span class=\"hljs-keyword\">interface</span>{}, rsp *User)</span> <span class=\"hljs-title\">error</span></span>\n}\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">func</span> <span class=\"hljs-params\">(u *UserProvider)</span> <span class=\"hljs-title\">Reference</span><span class=\"hljs-params\">()</span> <span class=\"hljs-title\">string</span></span> {\n\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">\"UserProvider\"</span>\n}\n</code></pre>\n</li>\n<li>\n<p>注册服务和对象</p>\n<pre><code class=\"language-go\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">func</span> <span class=\"hljs-title\">init</span><span class=\"hljs-params\">()</span></span> {\n\tconfig.SetConsumerService(userProvider)\n\thessian.RegisterPOJO(&amp;User{})\n}\n</code></pre>\n</li>\n</ol>\n<h2>第二步：编写消费端主程序</h2>\n<ol>\n<li>\n<p>引入必需的dubbo-go包</p>\n<pre><code class=\"language-go\"><span class=\"hljs-keyword\">import</span> (\n\thessian <span class=\"hljs-string\">\"github.com/apache/dubbo-go-hessian2\"</span>\n\t_ <span class=\"hljs-string\">\"github.com/apache/dubbo-go/cluster/cluster_impl\"</span>\n\t_ <span class=\"hljs-string\">\"github.com/apache/dubbo-go/cluster/loadbalance\"</span>\n\t_ <span class=\"hljs-string\">\"github.com/apache/dubbo-go/common/proxy/proxy_factory\"</span>\n\t<span class=\"hljs-string\">\"github.com/apache/dubbo-go/config\"</span>\n\t_ <span class=\"hljs-string\">\"github.com/apache/dubbo-go/filter/filter_impl\"</span>\n\t_ <span class=\"hljs-string\">\"github.com/apache/dubbo-go/protocol/dubbo\"</span>\n\t_ <span class=\"hljs-string\">\"github.com/apache/dubbo-go/registry/protocol\"</span>\n\t_ <span class=\"hljs-string\">\"github.com/apache/dubbo-go/registry/zookeeper\"</span>\n\n\tgxlog <span class=\"hljs-string\">\"github.com/dubbogo/gost/log\"</span>\n)\n</code></pre>\n</li>\n<li>\n<p>main 函数</p>\n<pre><code class=\"language-go\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">func</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span></span> {\n\tconfig.Load()\n\ttime.Sleep(<span class=\"hljs-number\">3</span> * time.Second)\n\n\tgxlog.CInfo(<span class=\"hljs-string\">\"\\n\\n\\nstart to test dubbo\"</span>)\n\tuser := &amp;pkg.User{}\n\terr := userProvider.GetUser(context.TODO(), []<span class=\"hljs-keyword\">interface</span>{}{<span class=\"hljs-string\">\"A001\"</span>}, user)\n\t<span class=\"hljs-keyword\">if</span> err != <span class=\"hljs-literal\">nil</span> {\n\t\tgxlog.CError(<span class=\"hljs-string\">\"error: %v\\n\"</span>, err)\n\t\tos.Exit(<span class=\"hljs-number\">1</span>)\n\t\t<span class=\"hljs-keyword\">return</span>\n\t}\n\tgxlog.CInfo(<span class=\"hljs-string\">\"response result: %v\\n\"</span>, user)\n}\n</code></pre>\n</li>\n</ol>\n<h2>第三步：编写配置文件并配置环境变量</h2>\n<ol>\n<li>\n<p>编辑配置文件 log.yml, client.yml</p>\n<ul>\n<li>log.yml</li>\n</ul>\n<pre><code class=\"language-yml\"><span class=\"hljs-attr\">level:</span> <span class=\"hljs-string\">\"debug\"</span>\n<span class=\"hljs-attr\">development:</span> <span class=\"hljs-literal\">true</span>\n<span class=\"hljs-attr\">disableCaller:</span> <span class=\"hljs-literal\">false</span>\n<span class=\"hljs-attr\">disableStacktrace:</span> <span class=\"hljs-literal\">false</span>\n<span class=\"hljs-attr\">sampling:</span>\n<span class=\"hljs-attr\">encoding:</span> <span class=\"hljs-string\">\"console\"</span>\n\n<span class=\"hljs-comment\"># encoder</span>\n<span class=\"hljs-attr\">encoderConfig:</span>\n  <span class=\"hljs-attr\">messageKey:</span> <span class=\"hljs-string\">\"message\"</span>\n  <span class=\"hljs-attr\">levelKey:</span> <span class=\"hljs-string\">\"level\"</span>\n  <span class=\"hljs-attr\">timeKey:</span> <span class=\"hljs-string\">\"time\"</span>\n  <span class=\"hljs-attr\">nameKey:</span> <span class=\"hljs-string\">\"logger\"</span>\n  <span class=\"hljs-attr\">callerKey:</span> <span class=\"hljs-string\">\"caller\"</span>\n  <span class=\"hljs-attr\">stacktraceKey:</span> <span class=\"hljs-string\">\"stacktrace\"</span>\n  <span class=\"hljs-attr\">lineEnding:</span> <span class=\"hljs-string\">\"\"</span>\n  <span class=\"hljs-attr\">levelEncoder:</span> <span class=\"hljs-string\">\"capital\"</span>\n  <span class=\"hljs-attr\">timeEncoder:</span> <span class=\"hljs-string\">\"iso8601\"</span>\n  <span class=\"hljs-attr\">durationEncoder:</span> <span class=\"hljs-string\">\"seconds\"</span>\n  <span class=\"hljs-attr\">callerEncoder:</span> <span class=\"hljs-string\">\"short\"</span>\n  <span class=\"hljs-attr\">nameEncoder:</span> <span class=\"hljs-string\">\"\"</span>\n\n<span class=\"hljs-attr\">outputPaths:</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">\"stderr\"</span>\n<span class=\"hljs-attr\">errorOutputPaths:</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">\"stderr\"</span>\n<span class=\"hljs-attr\">initialFields:</span>\n</code></pre>\n<ul>\n<li>log.yml</li>\n</ul>\n<pre><code class=\"language-yml\"><span class=\"hljs-comment\"># dubbo client yaml configure file</span>\n\n<span class=\"hljs-attr\">check:</span> <span class=\"hljs-literal\">true</span>\n<span class=\"hljs-comment\"># client</span>\n<span class=\"hljs-attr\">request_timeout:</span> <span class=\"hljs-string\">\"3s\"</span>\n<span class=\"hljs-comment\"># connect timeout</span>\n<span class=\"hljs-attr\">connect_timeout:</span> <span class=\"hljs-string\">\"3s\"</span>\n\n<span class=\"hljs-comment\"># application config</span>\n<span class=\"hljs-attr\">application:</span>\n  <span class=\"hljs-attr\">organization:</span> <span class=\"hljs-string\">\"dubbo.io\"</span>\n  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">\"UserInfoClient\"</span>\n  <span class=\"hljs-attr\">module:</span> <span class=\"hljs-string\">\"dubbo-go user-info client\"</span>\n  <span class=\"hljs-attr\">version:</span> <span class=\"hljs-string\">\"0.0.1\"</span>\n  <span class=\"hljs-attr\">environment:</span> <span class=\"hljs-string\">\"dev\"</span>\n\n<span class=\"hljs-comment\"># registry config</span>\n<span class=\"hljs-attr\">registries:</span>\n  <span class=\"hljs-attr\">\"demoZk\":</span>\n    <span class=\"hljs-attr\">protocol:</span> <span class=\"hljs-string\">\"zookeeper\"</span>\n    <span class=\"hljs-attr\">timeout:</span> <span class=\"hljs-string\">\"3s\"</span>\n    <span class=\"hljs-attr\">address:</span> <span class=\"hljs-string\">\"127.0.0.1:2181\"</span>\n    <span class=\"hljs-attr\">username:</span> <span class=\"hljs-string\">\"\"</span>\n    <span class=\"hljs-attr\">password:</span> <span class=\"hljs-string\">\"\"</span>\n\n<span class=\"hljs-comment\"># reference config</span>\n<span class=\"hljs-attr\">references:</span>\n  <span class=\"hljs-attr\">\"UserProvider\":</span>\n    <span class=\"hljs-attr\">registry:</span> <span class=\"hljs-string\">\"demoZk\"</span>\n    <span class=\"hljs-attr\">protocol:</span> <span class=\"hljs-string\">\"dubbo\"</span>\n    <span class=\"hljs-attr\">interface:</span> <span class=\"hljs-string\">\"org.apache.dubbo.UserProvider\"</span>\n    <span class=\"hljs-attr\">cluster:</span> <span class=\"hljs-string\">\"failover\"</span>\n    <span class=\"hljs-attr\">methods:</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">\"GetUser\"</span>\n        <span class=\"hljs-attr\">retries:</span> <span class=\"hljs-number\">3</span>\n\n<span class=\"hljs-comment\"># protocol config</span>\n<span class=\"hljs-attr\">protocol_conf:</span>\n  <span class=\"hljs-attr\">dubbo:</span>\n    <span class=\"hljs-attr\">reconnect_interval:</span> <span class=\"hljs-number\">0</span>\n    <span class=\"hljs-attr\">connection_number:</span> <span class=\"hljs-number\">1</span>\n    <span class=\"hljs-attr\">heartbeat_period:</span> <span class=\"hljs-string\">\"5s\"</span>\n    <span class=\"hljs-attr\">session_timeout:</span> <span class=\"hljs-string\">\"180s\"</span>\n    <span class=\"hljs-attr\">pool_size:</span> <span class=\"hljs-number\">64</span>\n    <span class=\"hljs-attr\">pool_ttl:</span> <span class=\"hljs-number\">600</span>\n    <span class=\"hljs-attr\">getty_session_param:</span>\n      <span class=\"hljs-attr\">compress_encoding:</span> <span class=\"hljs-literal\">false</span>\n      <span class=\"hljs-attr\">tcp_no_delay:</span> <span class=\"hljs-literal\">true</span>\n      <span class=\"hljs-attr\">tcp_keep_alive:</span> <span class=\"hljs-literal\">true</span>\n      <span class=\"hljs-attr\">keep_alive_period:</span> <span class=\"hljs-string\">\"120s\"</span>\n      <span class=\"hljs-attr\">tcp_r_buf_size:</span> <span class=\"hljs-number\">262144</span>\n      <span class=\"hljs-attr\">tcp_w_buf_size:</span> <span class=\"hljs-number\">65536</span>\n      <span class=\"hljs-attr\">pkg_rq_size:</span> <span class=\"hljs-number\">1024</span>\n      <span class=\"hljs-attr\">pkg_wq_size:</span> <span class=\"hljs-number\">512</span>\n      <span class=\"hljs-attr\">tcp_read_timeout:</span> <span class=\"hljs-string\">\"1s\"</span>\n      <span class=\"hljs-attr\">tcp_write_timeout:</span> <span class=\"hljs-string\">\"5s\"</span>\n      <span class=\"hljs-attr\">wait_timeout:</span> <span class=\"hljs-string\">\"1s\"</span>\n      <span class=\"hljs-attr\">max_msg_len:</span> <span class=\"hljs-number\">1024000</span>\n      <span class=\"hljs-attr\">session_name:</span> <span class=\"hljs-string\">\"client\"</span>\n</code></pre>\n</li>\n<li>\n<p>把上面的两个配置文件分别配置为环境变量，为防止log的环境变量和服务端的log环境变量冲突，建议所有的环境变量不要做全局配置，在当前起效即可。</p>\n<pre><code class=\"language-shell\">export CONF_CONSUMER_FILE_PATH=\"xxx\"\nexport APP_LOG_CONF_FILE=\"xxx\"\n</code></pre>\n</li>\n</ol>\n<p>本文章源码详情见git：<a href=\"https://github.com/apache/dubbo-go-samples/tree/1.5/helloworld/go-client\">https://github.com/apache/dubbo-go-samples/tree/1.5/helloworld/go-client</a></p>\n",
  "link": "/zh-cn/docs/user/configuration/client.html",
  "meta": {
    "title": "client",
    "keywords": "消费端，client provider",
    "description": "提示用户配置消费端相关配置"
  }
}